\# .classpath file tells Eclipse where to find jars for libraries, related projects, etc. for the Java build path. We can check this into Git so long as we're careful to use relative paths that will work across developer workspaces.
#.classpath

# generated files
*/bin/
*/bin/**
*/build/
*/build/**
*/gen/
*/out/
build/
gen/

#Exclude .pem files to make sure they aren't checked in
*.pem

# Android application package file for distribution
*.apk
*.ap_

# Dalvik VM Executable, the pre-compressed .apk
*.dex

# Java class files
*.class

# Local configuration file (sdk path, etc)
*/local.properties  - actually needed for Travis CI
local.properties
# we need this so that backbone knows how to 
!*/local.properties.bridge

*/.DS_Store
*/.metadata
*/tmp/**
*/tmp/**/*
*.tmp
*.bak
*.swp
*/.settings/
*/.loadpath

# External tool builders
*/.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# Android Studio local workspace
workspace.xml
tasks.xml
.idea/dictionaries/*
.idea/misc.xml
.idea/libraries
.idea/libraries/*
.idea/misc.xml
.idea/modules.xml
.iml

# We do all project config in gradle, so don't need anything in .idea
.idea/*

# We do want code style to keep team in sync
!.idea/codeStyleSettings.xml

# CDT-specific
*/.cproject

# PDT-specific
*/.buildpath

# Gradle Build
.gradle
*/.gradle/
*/.gradle/**/*

# IMLs are safe to ignore as long as your project is entirely managed by gradle and maven
/**/*.iml
